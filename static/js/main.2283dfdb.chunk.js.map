{"version":3,"sources":["components/publication/LikeIcon.js","components/publication/CommentIcon.js","components/publication/ActiveIcon.js","components/utils.js","components/publication/Publication.js","App.js","serviceWorker.js","index.js"],"names":["LikeIcon","props","className","viewBox","xmlns","d","CommentIcon","id","enable-background","height","width","ActiveIcon","randomNumberFunc","n","m","randomNumber","Math","floor","random","randomLikeCounter","randomCommentCounter","Publication","src","author","photo","alt","name","isActive","date","content","href","link","image","today","Date","getDate","getMonth","getFullYear","getHours","getMinutes","currentDate","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+OAEe,SAASA,EAASC,GAC7B,OACJ,yBAAKC,UAAaD,EAAMC,UAAWC,QAAQ,oBAAoBC,MAAM,8BAA6B,0BAAMC,EAAE,+zDCF3F,SAASC,EAAYL,GAChC,OACI,yBAAKC,UAAaD,EAAMC,UAAWK,GAAG,SAASC,oBAAkB,0BAA0BC,OAAO,MAAMN,QAAQ,sBAAsBO,MAAM,MAAMN,MAAM,8BAA6B,uBAAGG,GAAG,qBAAoB,2BAAG,0BAAMF,EAAE,y4BCFnN,SAASM,EAAWV,GAC/B,OACI,yBAAMC,UAAaD,EAAMC,UAAWO,OAAO,OAAON,QAAQ,sBAAsBO,MAAM,QAAQN,MAAM,8BAA6B,0BAAMC,EAAE,w0BCQ1I,SAASO,IACZ,OAbiB,SAACC,EAAGC,GACrB,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAID,EAAI,IAAMA,EAE/D,OAAOE,EAUAA,CAAa,EAAG,KCN3B,IAAMI,EAAoBP,IACpBQ,EAAuBR,IAmCdS,MAjCf,SAAqBpB,GACnB,OACF,yBAAKC,UAAY,yBACX,yBAAKA,UAAY,oBACf,4BAAQA,UAAU,sBAClB,yBAAKoB,IAAKrB,EAAMsB,OAAOC,MAAOC,IAAI,aAAavB,UAAY,2BACzD,wBAAIA,UAAY,eAAeD,EAAMsB,OAAOG,MAC3CzB,EAAMsB,OAAOI,UAAY,kBAAChB,EAAD,CAAYT,UAAY,gBAClD,0BAAMA,UAAY,oBAAlB,IAAuCD,EAAM2B,OAE/C,0BAAM1B,UAAY,uBAChB,uBAAGA,UAAY,oBACVD,EAAM4B,SAEX,uBAAGC,KAAM7B,EAAM8B,MACf,yBAAKT,IAAKrB,EAAM+B,MAAOP,IAAI,kBAAiBvB,UAAY,sBAG1D,4BAAQA,UAAU,sBAChB,yBAAKA,UAAU,QACf,kBAACF,EAAD,CAAUE,UAAW,cAC7B,0BAAMA,UAAY,gBAAgBiB,IAE1B,yBAAKjB,UAAU,WACf,kBAACI,EAAD,CAAaJ,UAAW,iBAChC,0BAAMA,UAAY,mBAAmBkB,QC5BjCQ,EFDc,WAChB,IAAMK,EAAQ,IAAIC,KAElB,OAAQD,EAAME,UAAY,GAAK,IAAMF,EAAME,UAAYF,EAAME,WAAa,KAASF,EAAMG,WAAa,EAAK,GAAK,KAAOH,EAAMG,WAAa,GAAMH,EAAMG,WAAa,GAAM,IAAMH,EAAMI,cAAe,KAAOJ,EAAMK,WAAa,GAAK,IAAML,EAAMK,WAAaL,EAAMK,YAAc,KAAOL,EAAMM,aAAe,GAAK,IAAMN,EAAMM,aAAeN,EAAMM,cAQ3UC,GEOIC,MAff,WACE,OACE,kBAAC,EAAD,CAAalB,OAAQ,CACbG,KAAM,cACNF,MATO,uGAUPG,UAAS,GAEZE,QAAQ,8BACRG,MAZe,6FAafJ,KAAMA,EACNG,KAbI,qCCMOW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAQ,kBACf,EADe,MAEfC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2283dfdb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function LikeIcon(props){\r\n    return (\r\n<svg className = {props.className} viewBox=\"0 -28 512.001 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m256 455.515625c-7.289062 0-14.316406-2.640625-19.792969-7.4375-20.683593-18.085937-40.625-35.082031-58.21875-50.074219l-.089843-.078125c-51.582032-43.957031-96.125-81.917969-127.117188-119.3125-34.644531-41.804687-50.78125-81.441406-50.78125-124.742187 0-42.070313 14.425781-80.882813 40.617188-109.292969 26.503906-28.746094 62.871093-44.578125 102.414062-44.578125 29.554688 0 56.621094 9.34375 80.445312 27.769531 12.023438 9.300781 22.921876 20.683594 32.523438 33.960938 9.605469-13.277344 20.5-24.660157 32.527344-33.960938 23.824218-18.425781 50.890625-27.769531 80.445312-27.769531 39.539063 0 75.910156 15.832031 102.414063 44.578125 26.191406 28.410156 40.613281 67.222656 40.613281 109.292969 0 43.300781-16.132812 82.9375-50.777344 124.738281-30.992187 37.398437-75.53125 75.355469-127.105468 119.308594-17.625 15.015625-37.597657 32.039062-58.328126 50.167969-5.472656 4.789062-12.503906 7.429687-19.789062 7.429687zm-112.96875-425.523437c-31.066406 0-59.605469 12.398437-80.367188 34.914062-21.070312 22.855469-32.675781 54.449219-32.675781 88.964844 0 36.417968 13.535157 68.988281 43.882813 105.605468 29.332031 35.394532 72.960937 72.574219 123.476562 115.625l.09375.078126c17.660156 15.050781 37.679688 32.113281 58.515625 50.332031 20.960938-18.253907 41.011719-35.34375 58.707031-50.417969 50.511719-43.050781 94.136719-80.222656 123.46875-115.617188 30.34375-36.617187 43.878907-69.1875 43.878907-105.605468 0-34.515625-11.605469-66.109375-32.675781-88.964844-20.757813-22.515625-49.300782-34.914062-80.363282-34.914062-22.757812 0-43.652344 7.234374-62.101562 21.5-16.441406 12.71875-27.894532 28.796874-34.609375 40.046874-3.453125 5.785157-9.53125 9.238282-16.261719 9.238282s-12.808594-3.453125-16.261719-9.238282c-6.710937-11.25-18.164062-27.328124-34.609375-40.046874-18.449218-14.265626-39.34375-21.5-62.097656-21.5zm0 0\"/></svg>\r\n        )\r\n}","import React from 'react';\r\n\r\nexport default function CommentIcon(props){\r\n    return (\r\n        <svg className = {props.className} id=\"Capa_1\" enable-background=\"new 0 0 511.072 511.072\" height=\"512\" viewBox=\"0 0 511.072 511.072\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"Speech_Bubble_48_\"><g><path d=\"m74.39 480.536h-36.213l25.607-25.607c13.807-13.807 22.429-31.765 24.747-51.246-36.029-23.644-62.375-54.751-76.478-90.425-14.093-35.647-15.864-74.888-5.121-113.482 12.89-46.309 43.123-88.518 85.128-118.853 45.646-32.963 102.47-50.387 164.33-50.387 77.927 0 143.611 22.389 189.948 64.745 41.744 38.159 64.734 89.63 64.734 144.933 0 26.868-5.471 53.011-16.26 77.703-11.165 25.551-27.514 48.302-48.593 67.619-46.399 42.523-112.042 65-189.83 65-28.877 0-59.01-3.855-85.913-10.929-25.465 26.123-59.972 40.929-96.086 40.929zm182-420c-124.039 0-200.15 73.973-220.557 147.285-19.284 69.28 9.143 134.743 76.043 175.115l7.475 4.511-.23 8.727c-.456 17.274-4.574 33.912-11.945 48.952 17.949-6.073 34.236-17.083 46.99-32.151l6.342-7.493 9.405 2.813c26.393 7.894 57.104 12.241 86.477 12.241 154.372 0 224.682-93.473 224.682-180.322 0-46.776-19.524-90.384-54.976-122.79-40.713-37.216-99.397-56.888-169.706-56.888z\"/></g></g></svg>\r\n        )\r\n}","import React from 'react';\r\n\r\nexport default function ActiveIcon(props){\r\n    return (\r\n        <svg  className = {props.className} height=\"16pt\" viewBox=\"0 -10 511.99143 511\" width=\"511pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m510.652344 185.882812c-3.371094-10.367187-12.566406-17.707031-23.402344-18.6875l-147.796875-13.417968-58.410156-136.75c-4.3125-10.046875-14.125-16.53125-25.046875-16.53125s-20.738282 6.484375-25.023438 16.53125l-58.410156 136.75-147.820312 13.417968c-10.835938 1-20.011719 8.339844-23.402344 18.6875-3.371094 10.367188-.257813 21.738282 7.9375 28.925782l111.722656 97.964844-32.941406 145.085937c-2.410156 10.667969 1.730468 21.699219 10.582031 28.097656 4.757813 3.457031 10.347656 5.183594 15.957031 5.183594 4.820313 0 9.644532-1.28125 13.953125-3.859375l127.445313-76.203125 127.421875 76.203125c9.347656 5.585938 21.101562 5.074219 29.933593-1.324219 8.851563-6.398437 12.992188-17.429687 10.582032-28.097656l-32.941406-145.085937 111.722656-97.964844c8.191406-7.1875 11.308594-18.535156 7.9375-28.925782zm-252.203125 223.722657\"/></svg>\r\n        )\r\n}","const randomNumber = (n, m) => {\r\n    const randomNumber = Math.floor(Math.random() * (m - n + 1)) + n;\r\n\r\n    return randomNumber;\r\n}\r\n\r\nconst currentDate = () => {\r\n    const today = new Date();\r\n\r\n    return (today.getDate() < 10 ? '0' + today.getDate() : today.getDate()) + '-'  + ((today.getMonth() + 1) < 10 ? '0' + (today.getMonth() + 1) : (today.getMonth() + 1)) + '-' + today.getFullYear()+ ' ' + (today.getHours() < 10 ? '0' + today.getHours() : today.getHours()) + ':' + (today.getMinutes() < 10 ? '0' + today.getMinutes() : today.getMinutes());\r\n}\r\n\r\nexport function randomNumberFunc() {\r\n    return randomNumber(5, 100);\r\n};\r\n\r\nexport function currentDateFunc() {\r\n    return currentDate();\r\n};","import React from 'react';\nimport './Publication.css';\nimport LikeIcon from './LikeIcon';\nimport CommentIcon from './CommentIcon';\nimport ActiveIcon from './ActiveIcon';\nimport {randomNumberFunc} from \"../utils\";\n\nconst randomLikeCounter = randomNumberFunc();\nconst randomCommentCounter = randomNumberFunc();\n\nfunction Publication(props) {\n  return (\n<div className  =\"publication-container\">\n      <div className = \"publication-body\">\n        <header className=\"publication-header\">\n        <img src={props.author.photo} alt=\"author-img\" className = \"author-publication-img\" />\n          <h3 className = \"author-name\">{props.author.name}</h3>\n          {props.author.isActive && <ActiveIcon className = \"active-icon\"/>}  \n          <span className = \"publication-date\"> {props.date}</span>\n        </header>\n        <main className = \"publication-content\">\n          <p className = \"publication-text\">\n              {props.content}\n          </p>\n          <a href={props.link}>\n          <img src={props.image} alt=\"publication img\"className = \"publication-img\" />\n          </a>\n        </main>\n        <footer className=\"publication-footer\">\n          <div className=\"like\">\n          <LikeIcon className =\"like-icon\"/>\n  <span className = \"like-counter\">{randomLikeCounter}</span>\n          </div>\n          <div className=\"comment\">\n          <CommentIcon className =\"comment-icon\"/>\n  <span className = \"comment-counter\">{randomCommentCounter}</span>\n          </div>\n        </footer>\n      </div>      \n    </div>\n  );\n}\n\nexport default Publication;\n","import React from 'react';\r\nimport Publication from './components/publication/Publication';\r\nimport {currentDateFunc} from \"./components/utils\";\r\n\r\nconst author_img = \"https://s.dou.ua/CACHE/images/img/static/companies/Graphic_Logo/72f3fd6bc92fb3c9d2011aa161c1b090.png\";\r\nconst publication_img = \"https://www.digest.pro/wp-content/uploads/2019/12/Izuchit-biblioteku-React-JS-1024x576.png\";\r\nconst link = \"https://uk.reactjs.org/versions\";\r\nconst date = currentDateFunc();\r\n\r\nfunction App() {\r\n  return (\r\n    <Publication author={{\r\n            name: \"Cursor-News\",\r\n            photo: author_img,\r\n            isActive:true\r\n         }}\r\n         content=\"Try new version of React!!!\"\r\n         image={publication_img}\r\n         date={date}\r\n         link={link}\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <\n  App / > ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}